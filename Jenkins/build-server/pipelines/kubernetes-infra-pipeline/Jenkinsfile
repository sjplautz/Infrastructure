def modifiedApps = []
def gv

pipeline {
    agent none

    environment {
        SCRIPTS_PATH = "Jenkins/build-server/pipelines/kubernetes-infra-pipeline"
        APPS_PATH = "Kubernetes/apps/"
        APPS = "frontend-app,traffic-app,api-app"
    }

    options{
        buildDiscarder(logRotator(numToKeepStr: '5', artifactNumToKeepStr: '5'))
    }    

    stages {

        stage('run pre-build checks'){
            agent{
                label 'master'
            }
            when{
                not {
                    changeset "Kubernetes/apps/**"
                }
            }
            steps{
                script{
                    currentBuild.result = 'ABORTED'
                    error("no changes to deployments, exiting early")
                }
            }
        }

        stage('load scripts'){
            agent{
                label 'master'
            }
            steps{
                script{
                    gv = load "${SCRIPTS_PATH}/scripts.groovy"
                }
            }
        }

        stage('determine modified deployments'){
            agent{
                label 'master'
            }
            steps{
                script{
                    modifiedApps = gv.getModifiedApps(APPS)
                    modifiedApps.each{ print it }
                }
            }
        }

        stage('update modified deployments') {
            agent {
                label "kubernetes-agent"
            }
            environment{
                KUBECONFIG = credentials('remote-kubeconfig')
            }
            steps{
                script{
                    gv.apply(modifiedApps, gv.&updateDeployment)
                }
            }
        }
        
    }
        
}
